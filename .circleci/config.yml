version: 2
setup_steps:
  - &install_deps
    run: 
      name: Install dependencies
      command: |
        sudo apt update
        sudo apt install clang
  - &setup_rust
    run:
      name: Setup rust nightly and targets
      command: |
        rustup default nightly
        rustup target install wasm32-unknown-unknown
  - checkout
  - &version_info
    run: 
      name: Version information
      command: rustc --version; cargo --version; rustup --version
  - &cargo_fetch_retry
    run:
      name: Fetch dependencies with retry
      command: |
        for i in {1..5}; do cargo fetch && break || sleep 15; done
  - &restore_cache
    restore_cache:
      keys:
        - v1-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
  - &save_cache
    save_cache:
      paths:
        - /usr/local/cargo/registry
        - target/debug/.fingerprint
        - target/debug/build
        - target/debug/deps
      key: v1-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
  
jobs:
  build-and-test:
    docker:
      - image: circleci/rust
    environment:
      # Fail the build if there are warnings
      RUSTFLAGS: '-D warnings'
    steps:
      - *install_deps
      - *setup_rust
      - *version_info
      - checkout
      - *restore_cache 
      - *cargo_fetch_retry
      - run:
          name: Build all targets
          command: cargo build
      - *save_cache
      - run:
          name: Run all tests
          command: cargo test

  security:
    docker:
      - image: circleci/rust
    steps:
      - *install_deps
      - *setup_rust
      - *version_info
      - checkout
      - run:
          name: Cache permission
          command: |
            sudo chown -R $(whoami):$(id -ng) /usr/local/cargo
      - restore_cache:
          keys:
            - v1-cargo-audit-{{ arch }}
      - run:
          name: Install dependency auditing tool
          command: cargo install cargo-audit
      - save_cache:
          paths:
            - /usr/local/cargo
          key: v1-cargo-audit-{{ arch }}
      - run:
          name: Check for known security issues in dependencies
          command: cargo audit

  format:
    docker:
      - image: circleci/rust
    steps:
      - *install_deps
      - *setup_rust
      - *version_info
      - checkout
      - *restore_cache 
      - *cargo_fetch_retry
      - run:
          name: Install formatter
          command: rustup component add rustfmt
      - run:
          name: Formatting
          command: cargo fmt --all -- --check
      - *save_cache

  lint:
    docker:
      - image: circleci/rust
    steps:
      - *install_deps
      - *setup_rust
      - *version_info
      - checkout
      - *restore_cache 
      - *cargo_fetch_retry
      - run:
          name: Install Clippy
          command: rustup component add clippy
      - run:
          name: Linting
          # allowed unused-init as its generated by palette::event
          command: cargo clippy -- -D warnings -A clippy::unused-unit -A clippy::from-over-into
      - *save_cache

# NOTE: we run build-and-test first to build a cache
#       not to hammer cargo endpoint resulting in download
#       errors
workflows:
  version: 2
  build-test:
    jobs:
      # - security:
      #     filters:
      #       tags:
      #         only: /.*/
      - build-and-test:
          filters:
            tags:
              only: /.*/
      - format:
          requires:
            - build-and-test
          filters:
            tags:
              only: /.*/
      - lint:
          requires:
            - build-and-test
          filters:
            tags:
              only: /.*/
